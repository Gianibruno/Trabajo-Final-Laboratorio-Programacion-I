/*
 * GUI Autor
 */
package GUI;

/**
 * GUI Autor
 * @author Pablo
 */
public class AutorGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form Autor
     */
    public AutorGUI() {
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mensaje = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        imagen = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        datoId = new javax.swing.JLabel();
        datoNombre = new javax.swing.JTextField();
        datoDni = new javax.swing.JTextField();
        datoNacionalidad = new javax.swing.JTextField();
        datoNacimiento = new com.toedter.calendar.JDateChooser(null, null, null, new com.toedter.calendar.JSpinnerDateEditor());
        lblId = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblDni = new javax.swing.JLabel();
        lblNacionalidad = new javax.swing.JLabel();
        lblNacimiento = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        datoEstado = new javax.swing.JLabel();
        btnEstado = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnModo = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Registro de Autores");
        setToolTipText("Crear, Modificar, Activar o Desactivar un Autor");

        mensaje.setText("...");

        imagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/autor.png"))); // NOI18N
        imagen.setLabelFor(titulo);
        imagen.setToolTipText("");

        titulo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Registro de Autores");
        titulo.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagen)
                .addContainerGap())
        );

        datoId.setText("0");

        datoNombre.setEditable(false);

        datoDni.setEditable(false);
        datoDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                datoDniKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                datoDniKeyTyped(evt);
            }
        });

        datoNacionalidad.setEditable(false);

        datoNacimiento.setEnabled(false);

        lblId.setLabelFor(datoId);
        lblId.setText("Id:");

        lblNombre.setLabelFor(datoNombre);
        lblNombre.setText("Apellido y Nombre:");

        lblDni.setLabelFor(datoDni);
        lblDni.setText("DNI:");

        lblNacionalidad.setText("Nacionalidad:");

        lblNacimiento.setLabelFor(datoNacimiento);
        lblNacimiento.setText("Fecha de Nacimiento:");

        lblEstado.setLabelFor(datoEstado);
        lblEstado.setText("Estado Actual:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar.setBorder(null);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setVisible(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        datoEstado.setText(Entidades.Biblioteca.CONF.AUTORESTADOS[1]);

        btnEstado.setText("Desactivar");
        btnEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datoNombre))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datoDni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datoNacionalidad))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datoNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datoEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEstado))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datoId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEditar)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblDni, lblEstado, lblId, lblNacimiento, lblNacionalidad, lblNombre});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datoId)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(datoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDni)
                    .addComponent(datoDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNacionalidad)
                    .addComponent(datoNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNacimiento)
                    .addComponent(datoNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstado)
                    .addComponent(datoEstado)
                    .addComponent(btnEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEditar))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {datoDni, datoEstado, datoId, datoNacimiento, datoNacionalidad, datoNombre});

        btnModo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnModo.setText("Buscar");
        btnModo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModoActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/nuevo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setVisible(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cerrar.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setToolTipText("Click para cerrar la ventana de autores...");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnModo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(btnGuardar)
                    .addComponent(btnModo)
                    .addComponent(btnNuevo))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mensaje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mensaje)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // <editor-fold defaultstate="collapsed" desc=" Eventos del Diseñador ">
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        salir();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void datoDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datoDniKeyTyped
        //char tecla = evt.getKeyChar();
        //System.out.println(tecla);
        //if(tecla == 'A')
        //    evt.consume();
    }//GEN-LAST:event_datoDniKeyTyped

    private void datoDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datoDniKeyPressed
//        char tecla = evt.getKeyChar();
//        if(tecla == 'A')
//            evt.consume();
    }//GEN-LAST:event_datoDniKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if(btnGuardar.getText().equals("Guardar")){
            guardar();
        }else{
            actualizar();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        modoeditar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnModoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModoActionPerformed
        modobuscar();
    }//GEN-LAST:event_btnModoActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        modonuevo();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoActionPerformed
        if(btnEstado.getText().equals("Activar"))
            activar();
        else
            desactivar();
    }//GEN-LAST:event_btnEstadoActionPerformed
    //</editor-fold>

    // <editor-fold defaultstate="collapsed" desc=" Variables del Diseñador ">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEstado;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModo;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTextField datoDni;
    private javax.swing.JLabel datoEstado;
    private javax.swing.JLabel datoId;
    private com.toedter.calendar.JDateChooser datoNacimiento;
    private javax.swing.JTextField datoNacionalidad;
    private javax.swing.JTextField datoNombre;
    private javax.swing.JLabel imagen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblDni;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNacimiento;
    private javax.swing.JLabel lblNacionalidad;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel mensaje;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc=" Variables privadas ">
    private char teclas[] = {};
    private final javax.swing.Icon 
        iconoGuardar = new javax.swing.ImageIcon(getClass().getResource("/Iconos/guardar.png")),
        iconoActualizar = new javax.swing.ImageIcon(getClass().getResource("/Iconos/actualizar.png"));
    private String 
        dni = "",
        nombre = "",
        nacionalidad = "",
        estado = "";
    private java.time.LocalDate 
        nacimiento = null;
    private Entidades.Autor 
        autor = null;
    private BD.AutorData 
        ad = null;
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc=" Metodos publicos ">
    public void ver(Entidades.Autor autor){
        this.autor = autor;
        datoId.setText(String.valueOf(this.autor.getIdAutor()));
        datoDni.setText(this.autor.getDni());
        datoNombre.setText(this.autor.getNombre());
        datoNacionalidad.setText(this.autor.getNacionalidad());
        datoNacimiento.setDate(java.sql.Date.valueOf(this.autor.getFechaNacimiento()));
        datoEstado.setText(Entidades.Biblioteca.CONF.AUTORESTADOS[this.autor.getEstado()]);
    }
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc=" Metodos privados ">
    
    private void iniciar(){
        modonuevo();
    }
    
    private void salir() {
        //ver si puede salir
        dispose();
    }

    private void modoeditar() {
        System.out.println("Modo Editar Autor");
        //habilitar edicion
        titulo.setText("Modificar Autor");
        btnModo.setVisible(true);
        btnNuevo.setVisible(true);
        btnGuardar.setVisible(true);
        btnEditar.setVisible(false);
        btnBuscar.setVisible(false);
        btnEstado.setVisible(true);
        //permito editar los campos
        datoDni.setEditable(true);
        datoNombre.setEditable(true);
        datoNacionalidad.setEditable(true);
        datoNacimiento.setEnabled(true);
        datoEstado.setEnabled(true);
        //mensaje
        mensaje.setText("Modifica la información para luego Actualizar...");
    }

    private void modonuevo() {
        System.out.println("Modo Nuevo Autor");
        //habilitar nuevo
        titulo.setText("Nuevo Autor");
        btnGuardar.setText("Guardar");
        btnGuardar.setIcon(iconoGuardar);
        btnModo.setVisible(true);
        btnNuevo.setVisible(false);
        btnGuardar.setVisible(true);
        btnEditar.setVisible(false);
        btnBuscar.setVisible(false);
        btnEstado.setVisible(false);
        limpiar();
        datoEstado.setText("Nuevo Autor");
        //muestro labels
        lblId.setVisible(true);
        lblNombre.setVisible(true);
        lblNacionalidad.setVisible(true);
        lblNacimiento.setVisible(true);
        lblEstado.setVisible(true);
        //muestro campos
        datoId.setVisible(true);
        datoNombre.setVisible(true);
        datoNacionalidad.setVisible(true);
        datoNacimiento.setVisible(true);
        datoEstado.setVisible(true);
        //permito editar los campos
        datoDni.setEditable(true);
        datoNombre.setEditable(true);
        datoNacionalidad.setEditable(true);
        datoNacimiento.setEnabled(true);
        datoEstado.setEnabled(true);
        //mensaje
        mensaje.setText("Completa todos los datos necesarios para luego guardar...");
    }

    private void modobuscar() {
        System.out.println("Modo Buscar Autor");
        //habilitar buscar
        titulo.setText("Buscar Autor");
        btnGuardar.setText("Actualizar");
        btnGuardar.setIcon(iconoActualizar);
        btnModo.setVisible(false);
        btnNuevo.setVisible(true);
        btnGuardar.setVisible(false);
        btnEditar.setVisible(false);
        btnBuscar.setVisible(true);
        btnEstado.setVisible(false);
        limpiar();
        //oculto editar
        btnEditar.setVisible(false);
        //oculto labels
        lblId.setVisible(false);
        lblNombre.setVisible(false);
        lblNacionalidad.setVisible(false);
        lblNacimiento.setVisible(false);
        lblEstado.setVisible(false);
        //oculto campos no buscables
        datoId.setVisible(false);
        datoNombre.setVisible(false);
        datoNacionalidad.setVisible(false);
        datoNacimiento.setVisible(false);
        datoEstado.setVisible(false);
        //no permito edicion de campos
        datoNombre.setEditable(false);
        datoNacionalidad.setEditable(false);
        datoNacimiento.setEnabled(false);
        datoEstado.setEnabled(false);
        //permito editar dni
        datoDni.setEditable(true);
        //modifico mensaje
        mensaje.setText("Escribe el DNI a buscar, para buscar Presiona <ENTER>");//.........modificar
    }

    private void guardar() {
        if(validar()){
            if(grupo1tpfinal.Grupo1TPFinal.CONEXION.esValida()){
                //setear variables privadas
                dni = datoDni.getText();
                nombre = datoNombre.getText();
                nacionalidad = datoNacionalidad.getText();
                nacimiento = java.time.LocalDateTime.ofInstant(
                    datoNacimiento.getCalendar().toInstant(), 
                    datoNacimiento.getCalendar().getTimeZone().toZoneId()).toLocalDate();
                estado = datoEstado.getText();
                if(autor == null)
                    autor = new Entidades.Autor(
                        dni,
                        nombre,
                        nacionalidad,
                        nacimiento
                    );
                else{
                    autor.setDni(dni);
                    autor.setNombre(nombre);
                    autor.setNacionalidad(nacionalidad);
                    autor.setFechaNacimiento(nacimiento);
                }
                autor.setEstado(java.util.Arrays.asList(Entidades.Biblioteca.CONF.AUTORESTADOS).indexOf(estado));
                if(ad == null) ad = new BD.AutorData(grupo1tpfinal.Grupo1TPFinal.CONEXION);
                //declaracion de nuevo id
                int id = ad.guardar(autor);
                //logica
                if(id > 0){
                    datoId.setText(String.valueOf(id));
                    datoEstado.setText(Entidades.Biblioteca.CONF.AUTORESTADOS[1]);
                    mensaje("Guardar Autor", "Se registró un nuevo Autor:\n"+ autor.getNombre() +".", 1);
                }else{
                    mensaje("Error al Guardar Autor", "Excepción:\n"+ ad.getExcepcion() +".", 0);
                }
            }else{
                mensaje("Error al Guardar Autor", "Compruebe su conexión con la Base de Datos.", 0);
            }
            desmarcarVacios();
        }else{
            mensaje("Error al Guardar Autor", "Rellene todos los datos necesarios.", 0);
            marcarVacios();
        }
    }
    
    private void actualizar(){
        if(validar()){
            if(grupo1tpfinal.Grupo1TPFinal.CONEXION.esValida()){
                //setear variables privadas
                dni = datoDni.getText();
                nombre = datoNombre.getText();
                nacionalidad = datoNacionalidad.getText();
                nacimiento = java.time.LocalDateTime.ofInstant(
                    datoNacimiento.getCalendar().toInstant(), 
                    datoNacimiento.getCalendar().getTimeZone().toZoneId()).toLocalDate();
                estado = datoEstado.getText();
                if(autor == null)
                    autor = new Entidades.Autor(
                        dni,
                        nombre,
                        nacionalidad,
                        nacimiento
                    );
                else{
                    autor.setDni(dni);
                    autor.setNombre(nombre);
                    autor.setNacionalidad(nacionalidad);
                    autor.setFechaNacimiento(nacimiento);
                }
                autor.setEstado(java.util.Arrays.asList(Entidades.Biblioteca.CONF.AUTORESTADOS).indexOf(estado));
                if(ad == null) ad = new BD.AutorData(grupo1tpfinal.Grupo1TPFinal.CONEXION);
                //declaracion para ver si se modifico
                int seModifico = ad.modificar(autor);
                //logica
                if(seModifico == 1){
                    mensaje("Actualizar Autor", "Se modificaron los datos del Autor:\n"+ autor.getNombre() +".\nCon exito.", 1);
                }else{
                    mensaje("Error al Actualizar Autor", "Excepción:\n"+ ad.getExcepcion() +".", 0);
                }
            }else{
                mensaje("Error al Actualizar Autor", "Compruebe su conexión con la Base de Datos.", 0);
            }
            desmarcarVacios();
        }else{
            marcarVacios();
            mensaje("Error al Actualizar Autor", "Rellene todos los datos necesarios.", 0);
        }
    }
    
    private void buscar(){
        if(!datoDni.getText().isEmpty()){
            if(grupo1tpfinal.Grupo1TPFinal.CONEXION.esValida()){
                //setear variables privadas
                dni = datoDni.getText();
                if(ad == null) ad = new BD.AutorData(grupo1tpfinal.Grupo1TPFinal.CONEXION);
                autor = ad.buscarAutor(dni);
                //logica
                if(autor != null){
                    //habilitar los controles para permitir editar
                    //veo editar
                    btnEditar.setVisible(true);
                    //veo los labels
                    lblId.setVisible(true);
                    lblNombre.setVisible(true);
                    lblNacionalidad.setVisible(true);
                    lblNacimiento.setVisible(true);
                    lblEstado.setVisible(true);
                    //veo los campos
                    datoId.setVisible(true);
                    datoNombre.setVisible(true);
                    datoNacionalidad.setVisible(true);
                    datoNacimiento.setVisible(true);
                    datoEstado.setVisible(true);
                    //no permito edicion de campos
                    datoNombre.setEditable(false);
                    datoNacionalidad.setEditable(false);
                    datoNacimiento.setEnabled(false);
                    datoEstado.setEnabled(false);
                    //permito editar dni
                    datoDni.setEditable(true);
                    //llena los campos con el resultado
                    ver(autor);
                    //actualiza el boton estado
                    if(datoEstado.getText().equals(Entidades.Biblioteca.CONF.AUTORESTADOS[0]))
                        btnEstado.setText("Activar");
                    else
                        btnEstado.setText("Desactivar");
                }else{
                    //error no encontro ningun autor
                    mensaje("Error al Buscar Autor", "Autor no registrado en la Base de Datos...", 0);
                }
            }else{
                mensaje("Error al Buscar Autor", "Compruebe su conexión con la Base de Datos.", 0);
            }
            desmarcarVacios();
        }else{
            marcarVacios();
            mensaje("Error al Buscar Autor", "Rellene todos los datos necesarios.", 0);
        }
    }
    
    private void activar(){
        if(grupo1tpfinal.Grupo1TPFinal.CONEXION.esValida()){
            //setear variables privadas
            if(ad == null) ad = new BD.AutorData(grupo1tpfinal.Grupo1TPFinal.CONEXION);
            //declaraciones
            int 
                id = Integer.parseInt(datoId.getText()),
                seActivo = ad.activar(id);
            //logica
            if(seActivo == 1){
                btnEstado.setText("Desactivar");
                datoEstado.setText(Entidades.Biblioteca.CONF.AUTORESTADOS[1]);
                mensaje("Activar Autor", "Se activo el Autor con exito.", 1);
            }else{
                mensaje("Error al Activar Autor", "Excepción:\n"+ ad.getExcepcion() +".", 0);
            }
        }else{
            mensaje("Error al Activar Autor", "Compruebe su conexión con la Base de Datos.", 0);
        }
    }
    
    private void desactivar(){
        if(grupo1tpfinal.Grupo1TPFinal.CONEXION.esValida()){
            //setear variables privadas
            if(ad == null) ad = new BD.AutorData(grupo1tpfinal.Grupo1TPFinal.CONEXION);
            //declaraciones
            int 
                id = Integer.parseInt(datoId.getText()),
                seActivo = ad.desactivar(id);
            //logica
            if(seActivo == 1){
                btnEstado.setText("Activar");
                datoEstado.setText(Entidades.Biblioteca.CONF.AUTORESTADOS[0]);
                mensaje("Desactivar Autor", "Se desactivo el Autor con exito.", 1);
            }else{
                mensaje("Error al Desactivar Autor", "Excepción:\n"+ ad.getExcepcion() +".", 0);
            }
        }else{
            mensaje("Error al Desactivar Autor", "Compruebe su conexión con la Base de Datos.", 0);
        }
    }
    
    private void limpiar(){
        datoId.setText("0");
        datoNombre.setText("");
        datoDni.setText("");
        datoNacionalidad.setText("");
        datoNacimiento.setDate(java.sql.Date.valueOf(java.time.LocalDate.now()));
        datoEstado.setText(Entidades.Biblioteca.CONF.AUTORESTADOS[0]);
        desmarcarVacios();
    }
    
    private void desmarcarVacios(){
        datoNombre.setBackground(java.awt.Color.white);
        datoDni.setBackground(java.awt.Color.white);
        datoNacionalidad.setBackground(java.awt.Color.white);
        datoNacimiento.setBackground(this.getBackground());
    }
    
    private void marcarVacios(){
        if(datoNombre.getText().isEmpty())datoNombre.setBackground(java.awt.Color.YELLOW);
        if(datoDni.getText().isEmpty())datoDni.setBackground(java.awt.Color.YELLOW);
        if(datoNacionalidad.getText().isEmpty())datoNacionalidad.setBackground(java.awt.Color.YELLOW);
        if(datoNacimiento.getDate() == null)datoNacimiento.setBackground(java.awt.Color.YELLOW);
    }
    
    private boolean validarDni(){
        return true;//si Dni tiene un formato especifico?
    }
    
    private boolean validar() {
        return !datoNombre.getText().isEmpty()
                && !datoDni.getText().isEmpty()
                && !datoNacionalidad.getText().isEmpty()
                && datoNacimiento.getDate() != null;
    }
    
    private void mensaje(String titulo, String mensaje, int tipo) {
        javax.swing.JOptionPane.showMessageDialog(this, mensaje, titulo, tipo);
        System.out.println(titulo +"\n"+ mensaje);
    }
    
    //</editor-fold>
}
